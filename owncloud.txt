install owncloud on raspberry piverview of databases supported by ownCloud
20211119

Source:	https://doc.owncloud.com/server/10.8/admin_manual/installation\
	/manual_installation/manual_installation_db.html

overview of databases supported by ownCloud

MariaDB is the ownCloud recommended database.

Source:	https://doc.owncloud.com/server/10.8/admin_manual/configuration\
	/database/linux_database_configuration.html

Source:	https://doc.owncloud.com/server/10.8/admin_manual/configuration\
	/database/linux_database_configuration.html

Source:	https://doc.owncloud.com/server/10.8/admin_manual/installation\
	/installation_wizard.html

Source:	https://doc.owncloud.com/server/10.8/admin_manual/installation/

Source:	https://doc.owncloud.com/server/10.8/admin_manual/installation\
	/manual_installation/manual_installation_apache.html

Source:	https://httpd.apache.org/docs/current/en/install.html

Google:	raspberry pi apache2 install

Source:	https://pimylifeup.com/raspberry-pi-apache/

pi@raspberrypi:~ $ sudo apt update;sudo apt dist-upgrade -y
pi@raspberrypi:~ $ sudo rpi-update
pi@raspbpi@raspberrypi:~ $ ls /etc/php/7.4
cli  mods-available
errypi:~ $ sudo apt-get update
pi@raspberrypi:~ $ sudo apt-get upgrade
pi@raspberrypi:~ $ echo 'deb https://download.owncloud.com/desktop/ownCloud/stable/latest/linux/Debian_11/ /' \
			 | sudo tee -a /etc/apt/sources.list.d/owncloud.list
pi@raspberrypi:~ $ sudo apt install owncloud-client
pi@raspberrypi:~ $ cd Downloads
pi@raspberrypi:~s/Downloads $ ls

INSTALL.sh  owncloud-complete-20210721.tar.bz2

pi@raspberrypi:~ $ sudo INSTALL.sh

total 4
-rwxr-xr-x 1 pi pi 561 Nov 19 10:41 INSTALL.sh

pi@raspberrypi:~/Downloads  $ ls -lINSTALL.sh  owncloud-complete-20210721.tar.bz2

pi@raspberrypi:~/Downloads  $ rm *.tar.*
pi@raspberrypi:~/Downloads  $ wget https://download.owncloud.org/community/owncloud-complete-20210721.tar.bz2
pi@raspberrypi:~/Downloads  $ tar -xjf owncloud-complete-20210721.tar.bz
pi@raspberrypi:~/Downloads  $ ls /var
pi@raspberrypi:~/Downloads  $ ls /var/www
pi@raspberrypi:~/Downloads  $ sudo cp -r owncloud /var/www
pi@raspberrypi:~/Downloads  $ cd
pi@raspberrypi:~ $ sudo apt install mariadb-server
pi@raspberrypi:~ $ sudo mysql_secure_installation


NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB
      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!
INSTALL.sh  owncloud-complete-20210721.tar.bz2

In order to log into MariaDB to secure it, we'll need the current
password for the root user. If you've just installed MariaDB, and
haven't set the root password yet, you should just press enter here.

Enter current password for root (enter for none): 
OK, successfully used password, moving on...

Setting the root password or using the unix_socket ensures that nobody
can log into the MariaDB root user without the proper authorisation.

You already have your root account protectverview of databases supported by ownClouded, so you can safely answer 'n'.

Switch to unix_socket authentication [Y/n] 
Enabled successfully!
Reloading privilege tables..
 ... Success!


You already have your root account protected, so you can safely answer 'n'.

Change the root password? [Y/n] n
 ... skipping.
verview of databases supported by ownCloud
By default, a MariaDB installation has an anonymous user, allowing anyone
to log into MariaDB without having to have a user account created for
them.  This is intended only for testing, and to make the installation
go a bit smoother.  You should remove them before moving into a
production environment.
pi@raspberrypi:~ $ ls /etc/php/7.4
cli  mods-available

Remove anonymous users? [Y/n] n
 ... skipping.

Normally, root should only be allowed to connect from 'localhost'.  This
ensures that someone cannot guess at the root password from the network.

Disallow root login remotely? [Y/n] n
 ... skipping.

By default, MariaDB comes with a database named 'test' that anyone can
access.  This is also intended only for testing, and should be removed
before moving into a production environment.

Remove test database and access to it? [Y/n] n
 ... skipping.

Reloading the privilege tables will ensure that all changes made so far
will take effect immediately.

Reload privilege tables now? [Y/n] 
 ... Success!

Cleaning up...
pi@raspberrypi:~ $ ls /etc/php/7.4
cli  mods-available

All done!  If you've completed all of the above steps, your MariaDB
installation should now be secure.

Thanks for using MariaDB!
pi@raspberrypi:~ $ sudo mysqladmin -u root -p version
Enter password: 
mysqladmin  Ver 9.1 Distrib 10.5.12-MariaDB, for debian-linux-gnueabihf on armv7l
Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.

Server version		10.5.12-MariaDB-0+deb11u1
Protocol version	10
Connection		Localhost via UNIX socket
UNIX socket		/run/mysqld/mysqld.sock
INSTALL.sh  owncloud-complete-20210721.tar.bz2
Uptime:			3 min 25 sec

Threads:sudo apt install apache2
sudo service apache2 start 1  Questions: 474  Slow queries: 0  Opens: 171  Open tables: 28  Queries per second avg: 2.312

pi@raspberrypi:~ $ sudo mysql_upgrade
This installation of MariaDB is already upgraded to 10.5.12-MariaDB, use --force if you still need to run \
mysql_upgrade

pi@raspberrypi:~ $ sudo mysql --user=root -p
Enter password: 
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 50
Server version: 10.5.12-MariaDB-0+deb11u1 Raspbian 11

Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]> CREATE USER 'raspberry'@'localhost' IDENTIFIED BY 'unicos50';
Qlhost' IDENTIFIED BY 'unicos50';

MariaDB [(none)]> GRANT ALL PRIVILEGES ON *.* TO 'raspberry'@'localhost' WITH GRANT OPTION;
Query OK, 0 rows affected (0.012 sec)

MariaDB [(none)]> FLUSH PRIVILEGES;
Query OK, 0 rows affected (0.002 sec)

MariaDB [(none)]> SHOW GRANTS FOR 'raspberry'@'localhost';
+---------------------------------------------------------------------------------------------------------------------------------------------+
| Grants for raspberry@localhost                                                                                                              |
+---------------------------------------------------------------------------------------------------------------------------------------------+
| GRANT ALL PRIVILEGES ON *.* TO `raspberry`@`localhost` IDENTIFIED BY PASSWORD '*90D003622DA58246D7F26FF956D2DAEB6F61B400' WITH GRANT OPTION |
+---------------------------------------------------------------------------------------------------------------------------------------------+
pi@raspberrypi:~ $ ls /etc/php/7.4
cli  mods-available
1 row in set (0.001 sec)

MariaDB [(none)]> exit
Bye

#	########################################################################
Install phpMyAdmin as a graphical interface for administering the database.
#	########################################################################

pi@raspberrypi:~ $ sudo apt install phpmyadmin

	answer No to question Web server to reconfigure automatically: 

		[X] apache3
		[ ] lighttpd
pi@raspberrypi:~ $ ls /etc/php/7.4
cli  mods-available

pi@raspberrypi:~ $ sudo dpkg-reconfigure phpmyadmin ;  #to reconfigure phpmyadmin

	answer No or yes as above

#	########################################################################
install postgres
#	########################################################################

pi@raspberrypi:~ $ sudo apt-get install postgresql

#	########################################################################
allow ownCloud access to the database, create a known password for the default 
user, postgres, which was sudo apt install apache2
sudo service apache2 startadded when the database was installed
#	########################################################################

pi@raspberrypi:~ $ sudo -i -u postgres psql

#	########################################################################
allow ownCloud access to the database, create a known password for the default 
user.
#	########################################################################
pi@raspberrypi:~ $ sudo -i -u postgres psql
Wi-Fi is currently blocked by rfkill.
Use raspi-config to set the country before use.

psql (13.5 (Raspbian 13.5-0+deb11u1))
Type "help" for help.

postgres=# \password
Enter new password: 
Enter it again: 
postgres=# \q

pi@raspberrypi:~ $ sudo apt install apache2
pi@raspberrypi:~ $ sudo service apache2 start
pi@raspberrypi:~ $ 
pi@raspberrypi:~ $ 
pi@raspberrypi:~ $ ls /etc/php/7.4
cli  mods-available

pi@raspberrypi:~ $ sudo apt-get update
pi@raspberrypi:~ $ sudo apt-get upgrade
pi@raspberrypi:~ $ sudo apt install apache2 -y

eading package lists... Done
Building dependency tree... Done
Reading state information... Done
apache2 is already the newest version (2.4.51-1~deb11u1).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

pi@raspberrypi:~ $ hostname -I
192.168.1.146 uhiuqwgeiufugasdhf

htpp://192.168.1.146

DEBIAN lOGO
	APAHE2 DEBIAN DEFAULT PAGE
		It works!
This is the default welcom page used to test the current Apache server operation....

pi@raspberrypi:~ $ 
pi@raspberrypi:~ $ sudo usermod -a -G www-data pi
pi@raspberrypi:~ $ sudo chown -R -f www-data:www-data /var/www/html
pi@raspberrypi:~ $ 
pi@raspberrypi:~ $ 
pi@raspberrypi:~ $ nano /var/www/html/index.html
pi@raspberrypi:~ $ sudo nano /var/www/html/example.php

pi@raspberrypi:~ $ 
pi@raspberrypi:~ $ sudo service apache2 start

	Job for apache2.service failed because the control process exited with error code. \
	See "systemctl status apache2.service" and "journalctl -xe" for details.

pi@raspberrypi:~ $ 

nsert this code to /etc/apache2/sites-enabled/000-default.conf

<VirtualHost *:80>
<Directory /var/www/test>
        Options +ExecCGI
        DirectoryIndex index.py
</Directory>
AddHandler cgi-script .py

...

DocumentRoot /var/www/test

...

pi@raspberrypi:~ $ nano /etc/apache2/sites-enabled/000-default.conf
pi@raspberrypi:~ $ 
pi@raspberrypi:~ $ 
pi@raspberrypi:~ $ 

pi@raspberrypi:~ $ python --version
Python 3.9.2
pi@raspberrypi:~ $ sudo apt-get update
Hit:1 http://raspbian.raspberrypi.org/raspbian bullseye InRelease
Hit:2 http://archive.raspberrypi.org/debian bullseye InRelease                      
Hit:3 https://download.owncloud.com/desktop/ownCloud/stable/latest/linux/Debian_9.0  InRelease
Reading package lists... Done
pi@raspberrypi:~ $ sudo apt-get install python3-pip
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
python3-pip is already the newest version (20.3.4-4+rpt1).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
pi@raspberrypi:~ $ 
pi@raspberrypi:~ $ sudo apt-get install apache2
eading package lists... Done
Building dependency tree... Done
Reading state information... Done
apache2 is already the newest version (2.4.51-1~deb11u1).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
pi@raspberrypi:~ $ 
pi@raspberrypi:~ $ sudo mkdir /var/www/test
pi@raspberrypi:~ $ sudo a2dismod mpm_event
Module mpm_event disabled.
To activate the new configuration, you need to run:
  systemctl restart apache2
pi@raspberrypi:~ $ 
pi@raspberrypi:~ $ sudo a2enmod mpm_prefork cgi
Considering conflict mpm_event for mpm_prefork:
Considering conflict mpm_worker for mpm_prefork:
Enabling module mpm_prefork.
Enabling module cgi.
To activate the new configuration, you need to run:
  systemctl restart apache2
pi@raspberrypi:~ $ 
pi@raspberrypi:~ $ sudo nano /etc/apache2/sites-enabled/000-default.conf

Add the following right after the first line, which reads <VirtualHost *:80\>.

	<Directory /var/www/test>
	    Options +ExecCGI
	    DirectoryIndex index.py
	</Directory>
	AddHandler cgi-script .py

	#Make sure that your <Directory> block is nested inside the <VirtualHost> block, like so. 
	#Make sure to indent correctly with tabs, too.

	#Change DocumentRoot /var/www/html
	#to     DocumentRoot /var/www/test


pi@raspberrypi:~ $ sudo service apache2 restart

google:	See systemctl status apache2.service and journalctl -xe for details.

